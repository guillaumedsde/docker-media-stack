# yaml-language-server: $schema=https://www.authelia.com/schemas/latest/json-schema/configuration.json

access_control:
  default_policy: deny
  rules:
    # Allow *arr calendar access
    - domain_regex: '^(movies|series|music|books)\.{{ env "ROOT_DOMAIN" }}$'
      policy: bypass
      resources: '^/feed(/v.)*/calendar/.+\.ics(\?.*)*$'
      methods:
        - GET
    # Allow *arr ping endpoint access
    - domain_regex: '^(movies|series|music|books|prowlarr)\.{{ env "ROOT_DOMAIN" }}$'
      policy: bypass
      resources: "^/ping$"
      methods:
        - HEAD
    # Allow qbittorrent healthcheck endpoint access
    - domain_regex: '^torrent\.{{ env "ROOT_DOMAIN" }}$'
      policy: bypass
      resources: "^/api/v2/app/version$"
      methods:
        - HEAD
    # Allow miniflux healthcheck endpoint access
    - domain_regex: '^miniflux\.{{ env "ROOT_DOMAIN" }}$'
      policy: bypass
      resources: "^/healthcheck$"
      methods:
        - HEAD
    # Allow grafana healthcheck endpoint access
    - domain_regex: '^grafana\.{{ env "ROOT_DOMAIN" }}$'
      policy: bypass
      resources: "^/api/health$"
      methods:
        - HEAD
    # Allow prometheus healthcheck endpoint access
    - domain_regex: '^prometheus\.{{ env "ROOT_DOMAIN" }}$'
      policy: bypass
      resources: "^/-/ready$"
      methods:
        - HEAD
    # Allow Scrutiny healthcheck endpoint access
    - domain_regex: '^scrutiny\.{{ env "ROOT_DOMAIN" }}$'
      policy: bypass
      resources: "^/api/health$"
      methods:
        - HEAD
    # Allow homer on LAN
    - domain_regex: '^home\.{{ env "ROOT_DOMAIN" }}$'
      networks:
        - "192.168.0.0/24"
      methods:
        - GET
        - HEAD
      policy: bypass
    # 2FA on admin apps
    - domain_regex: '^scrutiny\.{{ env "ROOT_DOMAIN" }}$'
      policy: two_factor
      subject: "group:scrutiny"
    - domain_regex: '^grafana\.{{ env "ROOT_DOMAIN" }}$'
      policy: two_factor
      subject: "group:grafana"
    - domain_regex: '^prometheus\.{{ env "ROOT_DOMAIN" }}$'
      policy: two_factor
      subject: "group:prometheus"
    # Default rule for other apps
    - domain:
        - '{group}.{{ env "ROOT_DOMAIN" }}'
        - '{{ env "ROOT_DOMAIN" }}'
      policy: one_factor

notifier:
  disable_startup_check: false
  smtp:
    timeout: 5s
    identifier: authelia
    subject: "[Authelia] {title}"
    disable_require_tls: false
    disable_html_emails: false

authentication_backend:
  refresh_interval: 5m
  password_reset:
    disable: true
  password_change:
    disable: true
  ldap:
    implementation: lldap
    address: ldap://lldap:3890

session:
  expiration: 24h
  inactivity: 2 weeks
  remember_me: 2 months
  redis:
    host: authelia-valkey
    port: 6379

storage:
  postgres:
    address: tcp://authelia-db:5432
    database: authelia
    username: authelia

theme: auto

telemetry:
  metrics:
    enabled: true

identity_providers:
  oidc:
    jwks:
      - key: |
          {{- env "NEXTCLOUD_OIDC_CERT" | nindent 10 }}
    clients:
      - client_id: "nextcloud"
        client_name: "Nextcloud"
        client_secret: '{{ env "NEXTCLOUD_OIDC_SECRET_DIGEST" }}'
        public: false
        authorization_policy: "one_factor"
        consent_mode: pre-configured
        pre_configured_consent_duration: "6 months"
        require_pkce: true
        pkce_challenge_method: "S256"
        redirect_uris:
          - 'https://cloud.{{ env "ROOT_DOMAIN" }}/apps/user_oidc/code'
        scopes:
          - "openid"
          - "profile"
          - "email"
          - "groups"
        response_types:
          - "code"
        grant_types:
          - "authorization_code"
        access_token_signed_response_alg: "none"
        userinfo_signed_response_alg: "none"
        token_endpoint_auth_method: "client_secret_post"

webauthn:
  disable: false
  enable_passkey_login: true
